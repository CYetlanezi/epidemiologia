#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
data<-read.csv("prueba.csv", header=TRUE)
names(data)<-c("dia","acumulado","individual")
head(data)
plot(acumulado~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(acumulado)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
d<-15
fit <- lm(log(acumulado)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
gamma<-1/3.95 #1/gamma es el tiempo promedio de infección que para el covid-19 es 3.95 días
m<-pendiente
mu<-1/(70*365) #1/mu es el tiempo promedio de vida
r0<-m/(mu+gamma)+1
r0
pendiente.se<-coef(summary(fit))[2,2]
pendiente.se
err<-2.5*pendiente.se
(inf<-r0-err)
(sup<-r0+err)
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
epid=data$individual
GT.covid<-generation.time("weibull",c(3.95,1))
sensitivity.analysis(epid, GT.covid, begin=1,end=31, est.method="EG", sa.type="time")
res.R<-estimate.R(epid,GT=GT.covid,methods=c("EG"))
(EG<-est.R0.EG(epid,GT.covid,begin=1,end=31,nsim=1000))
plotfit(res.R)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
data<-read.csv("prueba.csv", header=TRUE)
names(data)<-c("dia","acumulado","individual")
head(data)
plot(acumulado~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(acumulado)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
d<-15
fit <- lm(log(acumulado)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
gamma<-1/5.1 #1/gamma es el tiempo promedio de infección que para el covid-19 es 3.95 días
m<-pendiente
mu<-1/(70*365) #1/mu es el tiempo promedio de vida
r0<-m/(mu+gamma)+1
r0
pendiente.se<-coef(summary(fit))[2,2]
pendiente.se
err<-2.5*pendiente.se
(inf<-r0-err)
(sup<-r0+err)
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
epid=data$individual
GT.covid<-generation.time("weibull",c(3.95,1))
sensitivity.analysis(epid, GT.covid, begin=1,end=31, est.method="EG", sa.type="time")
res.R<-estimate.R(epid,GT=GT.covid,methods=c("EG"))
(EG<-est.R0.EG(epid,GT.covid,begin=1,end=31,nsim=1000))
plotfit(res.R)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
data<-read.csv("prueba.csv", header=TRUE) #poner el nombre de su archivo
names(data)<-c("dia","acumulado","individual")
head(data)
plot(acumulado~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(acumulado)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
d<-15 #días a tomar
fit <- lm(log(acumulado)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
gamma<-1/5.1 #1/gamma es el tiempo promedio de infección que para el covid-19 es 5.1 días
m<-pendiente
mu<-1/(70*365) #1/mu es el tiempo promedio de vida
r0<-m/(mu+gamma)+1
r0
pendiente.se<-coef(summary(fit))[2,2]
pendiente.se
err<-2.5*pendiente.se
(inf<-r0-err)
(sup<-r0+err)
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
epid=data$individual
GT.covid<-generation.time("weibull",c(3.95,1))
sensitivity.analysis(epid, GT.covid, begin=1,end=31, est.method="EG", sa.type="time") #poner en end los días totales que tienes de datos
res.R<-estimate.R(epid,GT=GT.covid,methods=c("EG"))
(EG<-est.R0.EG(epid,GT.covid,begin=1,end=31,nsim=1000))
plotfit(res.R)
plot(acumulado~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(individual)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
d<-15 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
data<-read.csv("prueba.csv", header=TRUE) #poner el nombre de su archivo
names(data)<-c("dia","acumulado","individual")
head(data)
plot(individual~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(individual)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
d<-15 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
gamma<-1/5.1 #1/gamma es el tiempo promedio de infección que para el covid-19 es 5.1 días
m<-pendiente
mu<-1/(70*365) #1/mu es el tiempo promedio de vida
r0<-m/(mu+gamma)+1
r0
pendiente.se<-coef(summary(fit))[2,2]
pendiente.se
err<-2.5*pendiente.se
(inf<-r0-err)
(sup<-r0+err)
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
d<-15 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-25 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-4 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-4 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-5 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-6 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-7 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-10 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-11 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-12 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
d<-11 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
gamma<-1/5.1 #1/gamma es el tiempo promedio de infección que para el covid-19 es 5.1 días
m<-pendiente
mu<-1/(70*365) #1/mu es el tiempo promedio de vida
r0<-m/(mu+gamma)+1
r0
pendiente.se<-coef(summary(fit))[2,2]
pendiente.se
err<-2.5*pendiente.se
(inf<-r0-err)
(sup<-r0+err)
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
#Instalar las librerias necesarias y cargarlas
instalar <- function(paquete) {
if (!require(paquete,character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)){
install.packages(as.character(paquete),
dependecies = TRUE,
repos = "http://cran.us.r-project.org")
library(paquete,
character.only = TRUE,
quietly = TRUE,
warn.conflicts = FALSE)
}
}
libs <- c( 'readr', 'R0')
lapply(libs, instalar)
data<-read.csv("prueba.csv", header=TRUE) #poner el nombre de su archivo
names(data)<-c("dia","acumulado","individual")
head(data)
plot(individual~dia,data,type='b',bty='l',
main='Brote de Covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
plot(log(individual)~dia,data,type='b',log='y',bty='l',main='Gráfica semilog de datos acumulados de brote de covid-19 en ___',
xlab='día',ylab='Casos de Covid-19')
Dias<-2:30
pendiente<-numeric(length=length(Dias))
pendiente.se<-numeric(length=length(Dias))
for (k in seq_along(Dias)){
fit<-lm(log(acumulado)~dia, data=subset(data, dia<=Dias[k]))
pendiente[k]<-coef(summary(fit))[2,1]
pendiente.se[k]<-coef(summary(fit))[2,2]
R0.hat<-pendiente*2.5+1
R0.se<-pendiente.se*2.5
}
plot(pendiente~Dias,type="o")
plot(pendiente.se~Dias,type="o")
plot(range(Dias),
range(c(R0.hat-2*R0.se,R0.hat+2*R0.se),na.rm=T),
type='n',bty='l',
xlab="longitud inicial de la fase",
ylab= expression("estimado" ~ R[0])
)
lines(R0.hat~Dias, type='o',lwd=2)
lines(R0.hat+2*R0.se~Dias,type='l')
lines(R0.hat-2*R0.se~Dias,type='l')
d<-11 #días a tomar
fit <- lm(log(individual)~dia,data=subset(data,dia<=d))
summary(fit)
coef(fit)
pendiente <- coef(fit)[2]
pendiente
epid=data$individual
GT.covid<-generation.time("weibull",c(3.95,1))
sensitivity.analysis(epid, GT.covid, begin=1,end=31, est.method="EG", sa.type="time") #poner en end los días totales que tienes de datos
res.R<-estimate.R(epid,GT=GT.covid,methods=c("EG"))
(EG<-est.R0.EG(epid,GT.covid,begin=1,end=31,nsim=1000))
plotfit(res.R)
